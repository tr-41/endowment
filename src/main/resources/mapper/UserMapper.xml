<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.endowment.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.endowment.domain.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="login" jdbcType="VARCHAR" property="login" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="rands" jdbcType="VARCHAR" property="rands" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="is_admin" jdbcType="BIT" property="isAdmin" />
    <result column="email_verified" jdbcType="BIT" property="emailVerified" />
    <result column="theme" jdbcType="VARCHAR" property="theme" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="help_flags1" jdbcType="BIGINT" property="helpFlags1" />
    <result column="last_seen_at" jdbcType="TIMESTAMP" property="lastSeenAt" />
    <result column="is_disabled" jdbcType="BIT" property="isDisabled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, version, `login`, email, `name`, `password`, salt, rands, company, org_id, is_admin, 
    email_verified, theme, created, updated, help_flags1, last_seen_at, is_disabled
  </sql>
  <select id="selectByExample" parameterType="com.example.endowment.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.endowment.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.endowment.domain.User">
    insert into user (id, version, `login`, 
      email, `name`, `password`, 
      salt, rands, company, 
      org_id, is_admin, email_verified, 
      theme, created, updated, 
      help_flags1, last_seen_at, is_disabled
      )
    values (#{id,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, #{login,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{rands,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{orgId,jdbcType=BIGINT}, #{isAdmin,jdbcType=BIT}, #{emailVerified,jdbcType=BIT}, 
      #{theme,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{helpFlags1,jdbcType=BIGINT}, #{lastSeenAt,jdbcType=TIMESTAMP}, #{isDisabled,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.endowment.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="login != null">
        `login`,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="rands != null">
        rands,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="emailVerified != null">
        email_verified,
      </if>
      <if test="theme != null">
        theme,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="helpFlags1 != null">
        help_flags1,
      </if>
      <if test="lastSeenAt != null">
        last_seen_at,
      </if>
      <if test="isDisabled != null">
        is_disabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="login != null">
        #{login,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="rands != null">
        #{rands,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=BIT},
      </if>
      <if test="emailVerified != null">
        #{emailVerified,jdbcType=BIT},
      </if>
      <if test="theme != null">
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="helpFlags1 != null">
        #{helpFlags1,jdbcType=BIGINT},
      </if>
      <if test="lastSeenAt != null">
        #{lastSeenAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDisabled != null">
        #{isDisabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.endowment.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.login != null">
        `login` = #{record.login,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.rands != null">
        rands = #{record.rands,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.isAdmin != null">
        is_admin = #{record.isAdmin,jdbcType=BIT},
      </if>
      <if test="record.emailVerified != null">
        email_verified = #{record.emailVerified,jdbcType=BIT},
      </if>
      <if test="record.theme != null">
        theme = #{record.theme,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.helpFlags1 != null">
        help_flags1 = #{record.helpFlags1,jdbcType=BIGINT},
      </if>
      <if test="record.lastSeenAt != null">
        last_seen_at = #{record.lastSeenAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDisabled != null">
        is_disabled = #{record.isDisabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      version = #{record.version,jdbcType=INTEGER},
      `login` = #{record.login,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      rands = #{record.rands,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=BIGINT},
      is_admin = #{record.isAdmin,jdbcType=BIT},
      email_verified = #{record.emailVerified,jdbcType=BIT},
      theme = #{record.theme,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      help_flags1 = #{record.helpFlags1,jdbcType=BIGINT},
      last_seen_at = #{record.lastSeenAt,jdbcType=TIMESTAMP},
      is_disabled = #{record.isDisabled,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.endowment.domain.User">
    update user
    <set>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="login != null">
        `login` = #{login,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="rands != null">
        rands = #{rands,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
      <if test="emailVerified != null">
        email_verified = #{emailVerified,jdbcType=BIT},
      </if>
      <if test="theme != null">
        theme = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="helpFlags1 != null">
        help_flags1 = #{helpFlags1,jdbcType=BIGINT},
      </if>
      <if test="lastSeenAt != null">
        last_seen_at = #{lastSeenAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDisabled != null">
        is_disabled = #{isDisabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.endowment.domain.User">
    update user
    set version = #{version,jdbcType=INTEGER},
      `login` = #{login,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      rands = #{rands,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=BIGINT},
      is_admin = #{isAdmin,jdbcType=BIT},
      email_verified = #{emailVerified,jdbcType=BIT},
      theme = #{theme,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      help_flags1 = #{helpFlags1,jdbcType=BIGINT},
      last_seen_at = #{lastSeenAt,jdbcType=TIMESTAMP},
      is_disabled = #{isDisabled,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>