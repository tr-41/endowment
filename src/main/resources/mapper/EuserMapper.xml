<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.endowment.mapper.EuserMapper">
  <resultMap id="BaseResultMap" type="com.example.endowment.domain.Euser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idNumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="disability" jdbcType="BIT" property="disability" />
    <result column="familyPlanning" jdbcType="BIT" property="familyplanning" />
    <result column="poverty" jdbcType="BIT" property="poverty" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, idNumber, address, account, disability, familyPlanning, poverty
  </sql>
  <select id="selectByExample" parameterType="com.example.endowment.domain.EuserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from euser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from euser
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from euser
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.endowment.domain.EuserExample">
    delete from euser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.endowment.domain.Euser">
    insert into euser (id, `name`, idNumber, 
      address, account, disability, 
      familyPlanning, poverty)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{idnumber,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{disability,jdbcType=BIT}, 
      #{familyplanning,jdbcType=BIT}, #{poverty,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.endowment.domain.Euser">
    insert into euser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="idnumber != null">
        idNumber,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="disability != null">
        disability,
      </if>
      <if test="familyplanning != null">
        familyPlanning,
      </if>
      <if test="poverty != null">
        poverty,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null">
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="disability != null">
        #{disability,jdbcType=BIT},
      </if>
      <if test="familyplanning != null">
        #{familyplanning,jdbcType=BIT},
      </if>
      <if test="poverty != null">
        #{poverty,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.endowment.domain.EuserExample" resultType="java.lang.Long">
    select count(*) from euser
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update euser
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idnumber != null">
        idNumber = #{record.idnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.disability != null">
        disability = #{record.disability,jdbcType=BIT},
      </if>
      <if test="record.familyplanning != null">
        familyPlanning = #{record.familyplanning,jdbcType=BIT},
      </if>
      <if test="record.poverty != null">
        poverty = #{record.poverty,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update euser
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      idNumber = #{record.idnumber,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      disability = #{record.disability,jdbcType=BIT},
      familyPlanning = #{record.familyplanning,jdbcType=BIT},
      poverty = #{record.poverty,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.endowment.domain.Euser">
    update euser
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null">
        idNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="disability != null">
        disability = #{disability,jdbcType=BIT},
      </if>
      <if test="familyplanning != null">
        familyPlanning = #{familyplanning,jdbcType=BIT},
      </if>
      <if test="poverty != null">
        poverty = #{poverty,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.endowment.domain.Euser">
    update euser
    set `name` = #{name,jdbcType=VARCHAR},
      idNumber = #{idnumber,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      disability = #{disability,jdbcType=BIT},
      familyPlanning = #{familyplanning,jdbcType=BIT},
      poverty = #{poverty,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>